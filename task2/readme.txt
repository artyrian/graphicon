Задание: 2 / Распознавание пешеходов

Базовая часть [+]

Подавление немаксимумов [+]

Bootstrapping  [+]

Нелинейный классификатор [+]

Скользящий контроль [+] (отчёт ниже)



Система: Qt Creator 2.1.0

ОС: Ubuntu 11.04

Аппаратура: Intel Pentium Dual-Core(2Ггц), 2Гб, NVidia G102M 512mb

time train (+boostrapping) ~ 4m 15s. 
time test ~ 3m 50s.
(На данном компьютере в данной ОС).


Комментарии:

Полностью писался в Qt под Ubuntu, после скомпилировал в Qt под Win.

Спорные моменты, возникавшие при написании, были разобраны на форуме.

Git: https://github.com/artyrian/graphicon/tree/master/task2

(Удобнее запускать из диеректории bin/. )
model.txt кладётся в текущую директорию, откуда была запущена программа;
test-own-locations.idl - тоже;



- - - ЗАПУСК - - -

training - консольное приложение, в параметрах запуска приложения нужно указать путь к директории с изображениями, путь к файлу с правильными локациями пешеходов для данной выборки.

testing - консольное приложение, в параметрах запуска приложения путь к директории с пешеходами для распознования, путь к model.txt;

quality - консольное приложение, выдающее полноту, точность и F-меру. Параметры: путь к файлу со своими распознанными пешеходами, путь к файлу с правильными локациями пешеходов.

imageviewer - графическое приложение, в меню выбирается изображение, model.txt, после этого будет доступно поле Detected, которое выделит зелёной рамочкой все локации, где по мнению predict есть пешеходы.



Параметры нелинейного ядра прописаны в src-core/Instances.hpp
#define ORDER_APPROXIMATION 2
#define STEP_APPROXIMATION 0.25 



 - - ОТЧЁТ  - -  
Cкользящий контроль.

Выборка train была поделена на 3 группы:
Группа 1: 1-64,
Группа 2: 65-128,
Группа 3: 130-193.
Далее проводилось обучение на Гр1 + Гр2 и проверялись значения на Гр3, Гр1 + Гр3 и проверка на Гр2, Гр2 + Гр3 и проверка на Гр1.
Подставляемые значения при обучении в С в struct parameter param : 0.0005, 0.001, 0.01, 0.1, 1, 10, 100, 1000, 10000;
F-мера (среднее): 96.48 % (для параметров 0.0005, 0.001, 0.01, 0.1, 1, 10, 100, 1000, 10000);

Больших изменений в результате не заметил. Лог этих значений лежит в файле log1.txt (текущей директории).

Также проверил значения 0.0001, 0.0005, 0.00001, 0.000001;
Здесь результаты уже поменялись в отличие от стандартных значений полуаемых при С = 1;
Лог лежит в log0001.txt (текущей директории)
F-мера (среднее для  0.0001) 97.94%
F-мера (среднее для  0.00001) 98.68%
F-мера (среднее для  0.000001) 32.32%

Пример .sh файла для запуска теста лежит в dop4.sh. Один из файлов для выполнения тестов с различными параметрами (запускался в Ubuntu).

При 0.0001 Гр1 + Гр3 и Гр2 + Гр3 не изменила результатов, зато на выборке Гр1 + Гр2 произшло увеличение Presicion => увеличение F-меры.

При 0.000001 recall стал резко падать => небольшое улучшение даёт значение С из [0.0001...0.0001], но С = 1 является стабильным значением для различных выборок.

